from aiogram import Router, F
from aiogram.filters.command import Command
from aiogram.types import Message
from aiogram.enums import ParseMode
from aiogram.filters import and_f, or_f

from texts import JOIN_UNION_TEXT, ABOUT_TRADE_UNION
from buttons.keyboard import KeyboardButtons

union_router = Router()

@union_router.message(F.chat.type ==  "private", or_f(Command("about_union"), F.text == "–ü—Ä–æ –ø—Ä–æ—Ñ—Å–ø—ñ–ª–∫—É ‚ÑπÔ∏è"))
async def about_union(message: Message):
    keyboard = await KeyboardButtons.create_union_buttons()
    await message.answer(text="–©–æ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å?", reply_markup=keyboard)

@union_router.message(F.chat.type ==  "private", F.text == "–ü—Ä–æ—Ñ–∫–æ–º ü¶Å")
async def about_union(message: Message):
    await message.answer(text=ABOUT_TRADE_UNION)

@union_router.message(F.chat.type ==  "private", F.text == "–ü—Ä–æ—Ñ–±—é—Ä–æ üîπ")
async def about_union(message: Message):
    await message.answer(text="–ü—Ä–æ—Ñ–±—é—Ä–æ - –ø—Ä–µ–¥—Å—Ç–∞–≤–Ω–∏–∫ –ø—Ä–æ—Ñ–∫–æ–º—É –Ω–∞ —Ñ–∞–∫—É–ª—å–µ—Ç—ñ (–±—É–¥–µ –±—ñ–ª—å—à–µ —Ç–µ–∫—Å—Ç—É)")

@union_router.message(F.chat.type ==  "private", F.text == "–í—Å—Ç—É–ø –≤ –ø—Ä–æ—Ñ—Å–ø—ñ–ª–∫—É/–ø—Ä–æ—Ñ–±—é—Ä–æ üìú")
async def about_union(message: Message):
    await message.answer(text = JOIN_UNION_TEXT, parse_mode = ParseMode.HTML)